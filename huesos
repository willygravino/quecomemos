
<!-- {% extends "AdminVideos/video_list_base.html" %}

{% load static %}

{% block titulo_ok %}
      <h1 class="fw-light"> Estos son los platos que elegiste para programar. </h1>
{% endblock %}

{% block mensaje %}
        <h1 class="fw-light"> Aún no elegiste ningún plato. </h1>
        <p class="lead text-body-secondary">Para elegir platos blabla platos y compartirlos con la comunidad de qué comemos, cargá la receta de esos platos ingresando a agregar plato.</p>
 {% endblock %}   -->


LA CLASE EN CUESTIÓN
 class PlatosElegidosMenu(PlatoList):
    model = Plato
    template_name = 'AdminVideos/platos_elegidos.html'
    context_object_name = 'platos_elegidos'

    def get_queryset(self):
        # Obtener los nombres de los platos elegidos por el usuario logueado
        nombres_platos_elegidos = Elegidos.objects.filter(usuario=self.request.user).values_list('nombre_plato_elegido', flat=True)
        # Filtrar los platos según los nombres obtenidos
        platos_elegidos = Plato.objects.filter(nombre_plato__in=nombres_platos_elegidos)
        return platos_elegidos
    
    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        context['ultimo_elegido'] = 'seleccionados'
        return context

ANTES DEL CAMBIO DE BASE DE DATOS "ELEGIDOS"

class PlatosElegidosMenu(PlatoList):
    model = ElegidosXSemana
    template_name = 'AdminVideos/platos_elegidos.html'
    def get_queryset(self):
        # Filtra los platos que estén en la tabla Elegidos
        platos_elegidos = Plato.objects.filter(nombre_plato__in=Elegidos.objects.values_list('nombre_plato_elegido', flat=True))
        return platos_elegidos

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        context['ultimo_elegido'] = 'seleccionados'
        return context
        


        MODELS
        class Elegidos(models.Model):
           nombre_plato_elegido = models.CharField(max_length=30, null=True)